var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/modules/AppModule.html",[0,1.466,1,1.2]],["body/modules/AppModule.html",[0,2.211,1,2.186,2,1.426,3,1.167,4,1.772,5,1.772,6,1.167,7,2.747,8,1.772,9,1.772,10,1.772,11,1.419,12,0.075,13,1.419,14,2.415,15,1.772,16,1.772,17,0.789,18,0.642,19,0.642,20,3.131,21,2.415,22,1.81,23,1.314,24,0.961,25,2.298,26,2.298,27,1.772,28,2.298,29,0.789,30,0.296,31,0.051,32,0.051]],["title/classes/CreateUserDto.html",[30,0.304,33,0.988]],["body/classes/CreateUserDto.html",[12,0.074,17,0.774,18,0.63,19,0.63,23,1.061,29,0.774,30,0.398,31,0.05,32,0.05,33,1.292,34,1.398,35,2.926,36,1.398,37,0.774,38,1.57,39,2.719,40,1.475,41,2.719,42,1.475,43,2.086,44,2.188,45,2.253,46,1.475,47,2.253,48,2.253,49,2.253,50,2.253,51,2.253,52,3.089,53,2.719,54,2.719,55,2.253,56,1.398,57,2.926,58,1.145,59,2.253]],["title/injectables/PrismaService.html",[11,0.812,60,0.988]],["body/injectables/PrismaService.html",[11,1.239,12,0.075,17,0.979,18,0.796,19,0.796,23,1.239,24,1.192,29,0.979,30,0.367,31,0.059,32,0.059,46,1.192,60,1.509,61,1.768,62,2.198,63,3.607,64,3.958,65,3.053,66,2.849,67,1.448,68,2.849]],["title/classes/UpdateUserDto.html",[30,0.304,69,0.988]],["body/classes/UpdateUserDto.html",[12,0.074,17,0.867,18,0.705,19,0.705,23,1.145,29,0.867,30,0.429,31,0.054,32,0.054,34,1.566,36,1.566,37,0.867,38,1.694,40,1.562,42,1.055,43,1.694,44,1.566,46,1.055,53,2.572,54,2.572,56,1.566,57,2.572,58,1.282,69,1.395,70,2.572,71,2.318,72,2.523,73,2.523,74,3.334,75,2.523,76,1.946,77,1.946,78,2.523,79,2.523]],["title/controllers/UsersController.html",[22,1.2,80,1.2]],["body/controllers/UsersController.html",[12,0.075,13,0.799,17,0.389,18,0.317,19,0.317,21,0.874,22,0.936,23,1.085,24,0.474,29,0.389,30,0.146,31,0.03,32,0.03,33,1.451,37,0.389,40,1.392,42,1.233,43,1.822,44,1.829,46,1.233,58,0.576,67,0.576,69,1.451,71,1.663,76,2.066,80,0.576,81,0.874,82,1.133,83,1.133,84,1.42,85,3.1,86,1.794,87,1.42,88,2.679,89,1.842,90,1.794,91,0.874,92,1.133,93,1.133,94,2.066,95,2.273,96,2.842,97,0.874,98,1.133,99,3.27,100,1.96,101,2.567,102,1.133,103,1.133,104,1.133,105,1.133,106,1.133,107,0.874,108,1.133,109,1.133,110,1.842,111,1.133,112,1.842,113,1.133,114,1.133,115,1.133,116,1.133,117,0.874,118,1.42,119,0.874,120,1.133,121,2.679,122,1.842,123,1.133,124,1.133,125,0.874,126,1.133,127,2.679,128,2.679,129,1.133,130,1.842,131,2.273,132,1.133,133,1.133,134,1.133,135,2.326,136,1.133,137,1.133,138,1.133,139,1.133,140,1.133,141,1.133,142,1.133,143,1.133]],["title/injectables/UsersService.html",[13,0.812,60,0.988]],["body/injectables/UsersService.html",[11,0.966,12,0.076,13,0.677,17,0.423,18,0.344,19,0.344,23,1.057,24,0.516,27,0.951,29,0.423,30,0.159,31,0.032,32,0.032,33,1.372,37,0.423,39,1.52,40,1.543,41,1.52,42,1.287,43,1.875,46,1.372,60,0.824,61,0.765,65,0.951,67,0.626,69,1.497,71,1.909,84,1.52,85,3.161,86,1.52,87,1.52,90,1.52,91,1.52,94,2.373,95,2.373,96,2.919,97,1.52,99,2.531,101,2.657,107,1.52,117,0.951,118,1.52,119,0.951,125,0.951,131,2.373,144,0.951,145,2.814,146,1.971,147,1.233,148,1.233,149,1.52,150,1.233,151,1.233,152,1.233,153,1.971,154,1.233,155,1.233,156,1.233,157,2.814,158,1.233,159,1.971,160,1.233,161,1.971,162,1.233,163,1.971,164,1.52,165,1.971,166,1.971,167,1.233,168,1.233]],["title/coverage.html",[169,1.98]],["body/coverage.html",[6,1.341,11,0.906,12,0.072,13,0.906,19,0.737,22,1.341,30,0.442,31,0.056,32,0.056,33,1.103,35,2.035,36,2.131,42,1.103,60,1.436,62,2.035,69,1.103,70,2.035,80,1.341,81,2.035,144,2.035,164,2.035,169,1.637,170,2.638,171,2.638,172,2.638,173,4.296,174,3.433,175,2.035,176,2.638,177,2.638,178,2.638,179,2.638,180,2.638,181,2.638,182,2.638]],["title/dependencies.html",[3,1.439,183,1.534]],["body/dependencies.html",[3,1.372,12,0.076,24,1.129,30,0.449,31,0.057,32,0.057,56,1.676,58,1.372,67,1.372,184,2.7,185,2.7,186,3.859,187,2.7,188,2.7,189,3.485,190,2.7,191,2.7,192,2.7,193,2.7,194,2.7,195,2.7,196,2.7,197,2.7,198,2.7,199,2.7,200,2.7,201,2.7,202,2.7,203,2.7,204,2.7]],["title/miscellaneous/functions.html",[205,1.534,206,2.184]],["body/miscellaneous/functions.html",[6,2.172,12,0.065,31,0.065,32,0.065,37,1.165,175,2.616,205,2.616,206,2.616,207,3.392]],["title/index.html",[37,0.683,208,1.989,209,1.989]],["body/index.html",[12,0.073,18,0.549,31,0.046,32,0.046,40,0.822,77,1.516,100,1.22,149,2.527,169,1.22,210,1.966,211,1.966,212,2.808,213,1.966,214,1.966,215,1.966,216,1.966,217,1.966,218,1.966,219,3.276,220,1.966,221,1.966,222,1.966,223,1.966,224,3.276,225,4.047,226,1.966,227,1.966,228,1.966,229,3.931,230,1.966,231,1.966,232,2.808,233,1.966,234,1.966,235,1.966,236,1.966,237,2.808,238,2.808,239,1.966,240,1.966,241,1.966,242,2.808,243,2.808,244,1.966,245,1.966,246,1.966,247,1.966,248,1.966,249,1.516,250,1.966,251,1.966,252,1.966,253,1.966,254,1.966,255,1.966,256,1.966,257,1.966,258,1.966,259,1.516,260,1.966,261,1.966,262,1.966,263,1.966,264,1.966,265,1.966,266,1.516,267,1.966,268,2.808,269,1.966,270,1.966,271,1.966,272,1.966,273,1.966]],["title/modules.html",[2,1.98]],["body/modules.html",[1,1.749,2,2.137,12,0.066,31,0.066,32,0.066,249,2.655,274,3.443,275,3.443,276,3.443]],["title/overview.html",[277,2.461]],["body/overview.html",[0,2.221,1,2.221,3,1.43,4,2.171,5,2.171,6,1.43,7,2.171,8,2.171,9,2.171,10,2.171,11,1.352,12,0.067,13,1.352,14,2.761,15,2.171,16,2.171,31,0.058,32,0.058,34,1.747,61,1.747,80,1.43,277,2.171,278,3.579,279,3.579]],["title/properties.html",[38,1.439,183,1.534]],["body/properties.html",[12,0.074,31,0.065,32,0.065,38,1.687,100,2.06,259,2.56,266,2.56,280,3.319,281,3.319,282,3.319]]],"invertedIndex":[["",{"_index":12,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":281,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":179,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":278,"title":{},"body":{"overview.html":{}}}],["1.1.23",{"_index":185,"title":{},"body":{"dependencies.html":{}}}],["10.0.0",{"_index":186,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":279,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["5.11.0",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["7.3.0",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["8.11.3",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":76,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["amazing",{"_index":250,"title":{},"body":{"index.html":{}}}],["apibody",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiparam",{"_index":121,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiproperty",{"_index":57,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["apiproperty()@isemail",{"_index":45,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isstring",{"_index":48,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isnotempty()@isstring()@minlength(6",{"_index":50,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apiproperty()@isoptional()@isnotempty()@isstring",{"_index":72,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["apitags",{"_index":120,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags('users",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":227,"title":{},"body":{"index.html":{}}}],["applications",{"_index":218,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":1,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["async",{"_index":85,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["author",{"_index":259,"title":{},"body":{"index.html":{},"properties.html":{}}}],["await",{"_index":161,"title":{},"body":{"injectables/UsersService.html":{}}}],["backers",{"_index":251,"title":{},"body":{"index.html":{}}}],["body",{"_index":112,"title":{},"body":{"controllers/UsersController.html":{}}}],["body(validationpipe",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":6,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":276,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":274,"title":{},"body":{"modules.html":{}}}],["building",{"_index":213,"title":{},"body":{"index.html":{}}}],["class",{"_index":30,"title":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":34,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":9,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":10,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["commands",{"_index":267,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":184,"title":{},"body":{"dependencies.html":{}}}],["const",{"_index":157,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor",{"_index":65,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}}}],["constructor(prisma",{"_index":147,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["controller",{"_index":80,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"coverage.html":{},"overview.html":{}}}],["controller('users",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":21,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{}}}],["coverage",{"_index":169,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createuser",{"_index":86,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuser(createuserdto",{"_index":91,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":33,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["data",{"_index":159,"title":{},"body":{"injectables/UsersService.html":{}}}],["declarations",{"_index":5,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decorator",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{}}}],["decorators",{"_index":44,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{}}}],["defined",{"_index":46,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delete",{"_index":115,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{}}}],["delete(':id')@apiparam({name",{"_index":98,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser",{"_index":87,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["deleteuser(@param('id",{"_index":142,"title":{},"body":{"controllers/UsersController.html":{}}}],["deleteuser(id",{"_index":97,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":3,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":100,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["dev",{"_index":272,"title":{},"body":{"index.html":{}}}],["development",{"_index":228,"title":{},"body":{"index.html":{}}}],["document",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["documentation",{"_index":170,"title":{},"body":{"coverage.html":{}}}],["dto/create",{"_index":117,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dto/update",{"_index":119,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["e2e",{"_index":239,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":214,"title":{},"body":{"index.html":{}}}],["email",{"_index":39,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["example",{"_index":224,"title":{},"body":{"index.html":{}}}],["export",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":8,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["express",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":63,"title":{},"body":{"injectables/PrismaService.html":{}}}],["field",{"_index":75,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["fields",{"_index":78,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["file",{"_index":19,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["findallusers",{"_index":145,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid",{"_index":146,"title":{},"body":{"injectables/UsersService.html":{}}}],["finduserbyid(id",{"_index":153,"title":{},"body":{"injectables/UsersService.html":{}}}],["found",{"_index":166,"title":{},"body":{"injectables/UsersService.html":{}}}],["framework",{"_index":212,"title":{},"body":{"index.html":{}}}],["function",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":206,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":270,"title":{},"body":{"index.html":{}}}],["get(':id",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(':id')@apiparam({name",{"_index":105,"title":{},"body":{"controllers/UsersController.html":{}}}],["getallusers",{"_index":88,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":208,"title":{"index.html":{}},"body":{}}],["getuserbyid",{"_index":89,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(@param('id",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{}}}],["getuserbyid(id",{"_index":104,"title":{},"body":{"controllers/UsersController.html":{}}}],["grow",{"_index":246,"title":{},"body":{"index.html":{}}}],["here",{"_index":256,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":263,"title":{},"body":{"index.html":{}}}],["id",{"_index":99,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":28,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":37,"title":{"index.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":17,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["init",{"_index":273,"title":{},"body":{"index.html":{}}}],["initnpx",{"_index":269,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":60,"title":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":61,"title":{},"body":{"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["installation",{"_index":223,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":226,"title":{},"body":{"index.html":{}}}],["isemail",{"_index":52,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":53,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["isoptional",{"_index":74,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["isstring",{"_index":54,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["join",{"_index":253,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":260,"title":{},"body":{"index.html":{}}}],["legend",{"_index":4,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["license",{"_index":266,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":243,"title":{},"body":{"index.html":{}}}],["matching",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["metadata",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":84,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["migrate",{"_index":271,"title":{},"body":{"index.html":{}}}],["minlength",{"_index":55,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":59,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":205,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":242,"title":{},"body":{"index.html":{}}}],["mode",{"_index":232,"title":{},"body":{"index.html":{}}}],["module",{"_index":0,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":2,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["more",{"_index":77,"title":{},"body":{"classes/UpdateUserDto.html":{},"index.html":{}}}],["myśliwiec",{"_index":261,"title":{},"body":{"index.html":{}}}],["name",{"_index":40,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["nest",{"_index":219,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":265,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["nestjs/platform",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":58,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":164,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["node.js",{"_index":211,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":156,"title":{},"body":{"injectables/UsersService.html":{}}}],["notfoundexception('user",{"_index":165,"title":{},"body":{"injectables/UsersService.html":{}}}],["npx",{"_index":268,"title":{},"body":{"index.html":{}}}],["open",{"_index":244,"title":{},"body":{"index.html":{}}}],["optional",{"_index":71,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["out",{"_index":16,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["overview",{"_index":277,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":183,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":113,"title":{},"body":{"controllers/UsersController.html":{}}}],["param('id",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameter",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":94,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["password",{"_index":41,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/UsersService.html":{}}}],["pg",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["please",{"_index":254,"title":{},"body":{"index.html":{}}}],["post",{"_index":110,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@apibody({type",{"_index":92,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":82,"title":{},"body":{"controllers/UsersController.html":{}}}],["prisma",{"_index":149,"title":{},"body":{"injectables/UsersService.html":{},"index.html":{}}}],["prisma/client",{"_index":67,"title":{},"body":{"injectables/PrismaService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["prisma/prisma.service",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"injectables/UsersService.html":{}}}],["prisma/prisma.service.ts",{"_index":62,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["prisma/prisma.service.ts:6",{"_index":66,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaclient",{"_index":64,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismaservice",{"_index":11,"title":{"injectables/PrismaService.html":{}},"body":{"modules/AppModule.html":{},"injectables/PrismaService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["production",{"_index":234,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":210,"title":{},"body":{"index.html":{}}}],["project",{"_index":245,"title":{},"body":{"index.html":{}}}],["promise",{"_index":96,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["properties",{"_index":38,"title":{"properties.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"properties.html":{}}}],["providers",{"_index":7,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["put",{"_index":111,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{}}}],["put(':id')@apiparam({name",{"_index":108,"title":{},"body":{"controllers/UsersController.html":{}}}],["read",{"_index":255,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{}}}],["reflect",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":222,"title":{},"body":{"index.html":{}}}],["request",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{}}}],["reset",{"_index":15,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["results",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returns",{"_index":95,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["run",{"_index":229,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":215,"title":{},"body":{"index.html":{}}}],["server",{"_index":216,"title":{},"body":{"index.html":{}}}],["side",{"_index":217,"title":{},"body":{"index.html":{}}}],["source",{"_index":18,"title":{},"body":{"modules/AppModule.html":{},"classes/CreateUserDto.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["sponsors",{"_index":248,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":207,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.module.ts",{"_index":20,"title":{},"body":{"modules/AppModule.html":{}}}],["src/main.ts",{"_index":175,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/users/dto/create",{"_index":35,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":70,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/users.controller.ts",{"_index":81,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:24",{"_index":93,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:31",{"_index":103,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":106,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:43",{"_index":109,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:52",{"_index":102,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.service.ts",{"_index":144,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:12",{"_index":150,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:17",{"_index":152,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:21",{"_index":154,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:29",{"_index":155,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:37",{"_index":151,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:9",{"_index":148,"title":{},"body":{"injectables/UsersService.html":{}}}],["start",{"_index":230,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":233,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":235,"title":{},"body":{"index.html":{}}}],["started",{"_index":209,"title":{"index.html":{}},"body":{}}],["starter",{"_index":221,"title":{},"body":{"index.html":{}}}],["statements",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":257,"title":{},"body":{"index.html":{}}}],["string",{"_index":43,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["super",{"_index":68,"title":{},"body":{"injectables/PrismaService.html":{}}}],["support",{"_index":249,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":275,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":181,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":238,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":241,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":240,"title":{},"body":{"index.html":{}}}],["tests",{"_index":237,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":247,"title":{},"body":{"index.html":{}}}],["this.prisma.user.create",{"_index":158,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.delete",{"_index":168,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findmany",{"_index":160,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.findunique",{"_index":162,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.prisma.user.update",{"_index":167,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.usersservice.createuser(createuserdto",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.deleteuser(id",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findallusers",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.finduserbyid(id",{"_index":137,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.updateuser(id",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":163,"title":{},"body":{"injectables/UsersService.html":{}}}],["touch",{"_index":258,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["twitter",{"_index":264,"title":{},"body":{"index.html":{}}}],["type",{"_index":42,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["typescript",{"_index":220,"title":{},"body":{"index.html":{}}}],["ui",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":236,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":282,"title":{},"body":{"properties.html":{}}}],["updated",{"_index":79,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["updateuser",{"_index":90,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuser(id",{"_index":107,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["updateuserdto",{"_index":69,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["user",{"_index":101,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":118,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto.ts",{"_index":36,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:10",{"_index":73,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:14",{"_index":51,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:19",{"_index":49,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:8",{"_index":47,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["users",{"_index":83,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.service",{"_index":116,"title":{},"body":{"controllers/UsersController.html":{}}}],["users/users.controller",{"_index":25,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":26,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":22,"title":{"controllers/UsersController.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["usersservice",{"_index":13,"title":{"injectables/UsersService.html":{}},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["validationpipe",{"_index":114,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":56,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"dependencies.html":{}}}],["version",{"_index":280,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":231,"title":{},"body":{"index.html":{}}}],["website",{"_index":262,"title":{},"body":{"index.html":{}}}],["yarn",{"_index":225,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":252,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":14,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // src/app.module.ts\nimport { Module } from '@nestjs/common';\nimport { UsersController } from './users/users.controller';\nimport { UsersService } from './users/users.service';\nimport { PrismaService } from '../prisma/prisma.service';\n\n@Module({\n  imports: [],\n  controllers: [UsersController],\n  providers: [UsersService, PrismaService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                name\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsString()@MinLength(6)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty, IsString, MinLength } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateUserDto {\n  @ApiProperty()\n  @IsEmail()\n  email: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  @MinLength(6)\n  password: string;\n\n  @ApiProperty()\n  @IsNotEmpty()\n  @IsString()\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        PrismaClient\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in prisma/prisma.service.ts:6\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient {\n  constructor() {\n    super();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsNotEmpty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/update-user.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsOptional, IsString } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class UpdateUserDto {\n  @ApiProperty()\n  @IsOptional() // This field is optional\n  @IsNotEmpty()\n  @IsString()\n  name?: string;\n\n  // Add more fields that can be updated\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    Async\n                                createUser\n                            \n                            \n                                    \n                                    \n                                    Async\n                                deleteUser\n                            \n                            \n                                    \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    \n                                    \n                                    Async\n                                getUserById\n                            \n                            \n                                    \n                                    \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiBody({type: CreateUserDto})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:24\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiParam({name: 'id', description: 'User ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:52\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:31\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiParam({name: 'id', description: 'User ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put(':id')@ApiParam({name: 'id', description: 'User ID'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:43\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Post,\n  Get,\n  Put,\n  Body,\n  Param,\n  ValidationPipe,\n  Delete,\n} from '@nestjs/common';\nimport { UsersService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from '@prisma/client';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiTags, ApiParam, ApiBody } from '@nestjs/swagger';\n\n@Controller('users')\n@ApiTags('users')\nexport class UsersController {\n  constructor(private readonly usersService: UsersService) {}\n\n  @Post()\n  @ApiBody({ type: CreateUserDto }) // Add this decorator to document the request body\n  async createUser(\n    @Body(ValidationPipe) createUserDto: CreateUserDto,\n  ): Promise {\n    return this.usersService.createUser(createUserDto);\n  }\n\n  @Get()\n  async getAllUsers(): Promise {\n    return this.usersService.findAllUsers();\n  }\n\n  @Get(':id')\n  @ApiParam({ name: 'id', description: 'User ID' }) // Add this decorator to document the 'id' parameter\n  async getUserById(@Param('id') id: string): Promise {\n    return this.usersService.findUserById(id);\n  }\n\n  @Put(':id')\n  @ApiParam({ name: 'id', description: 'User ID' }) // Add this decorator to document the 'id' parameter\n  async updateUser(\n    @Param('id') id: string,\n    @Body(ValidationPipe) updateUserDto: UpdateUserDto,\n  ): Promise {\n    return this.usersService.updateUser(id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @ApiParam({ name: 'id', description: 'User ID' }) // Add this decorator to document the 'id' parameter\n  async deleteUser(@Param('id') id: string): Promise {\n    return this.usersService.deleteUser(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                deleteUser\n                            \n                            \n                                    Async\n                                findAllUsers\n                            \n                            \n                                    Async\n                                findUserById\n                            \n                            \n                                    Async\n                                updateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUser(createUserDto: CreateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:12\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteUser(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findAllUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAllUsers()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Promise\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        findUserById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findUserById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:21\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        updateUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateUser(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/users.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                updateUserDto\n                                            \n                                                            UpdateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { PrismaService } from '../../prisma/prisma.service';\nimport { User } from '@prisma/client';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\n\n@Injectable()\nexport class UsersService {\n  constructor(private prisma: PrismaService) {}\n\n  async createUser(createUserDto: CreateUserDto): Promise {\n    const { email, password, name } = createUserDto;\n    return this.prisma.user.create({ data: { email, password, name } });\n  }\n\n  async findAllUsers(): Promise {\n    return this.prisma.user.findMany();\n  }\n\n  async findUserById(id: string): Promise {\n    const user = await this.prisma.user.findUnique({ where: { id } });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n\n  async updateUser(id: string, updateUserDto: UpdateUserDto): Promise {\n    const { name } = updateUserDto;\n    return this.prisma.user.update({\n      where: { id },\n      data: { name },\n    });\n  }\n\n  async deleteUser(id: string): Promise {\n    const user = await this.prisma.user.delete({\n      where: { id },\n    });\n    if (!user) {\n      throw new NotFoundException('User not found');\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            @prisma/client : ^5.11.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            pg : ^8.11.3\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n        \n            swagger-ui-express : ^5.0.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\nExample :$ yarn installRunning the app\nExample :# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\nExample :# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\nCommands\nnpx prisma initnpx prisma generate \nnpx prisma migrate dev --name init\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPrismaService\n\nPrismaService\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPrismaService->AppModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nAppModule -->\n\nUsersService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    1 Controller\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
